#!/usr/bin/env bash

set -euo pipefail
# set -x

template="$(cat <<EOT
{
  "extends": "%stsconfig.json",
  "files": ["%siobroker.d.ts", %s"%s"],
  "compilerOptions": {
    "composite": true,
    "rootDir": "%s"
  }
}
EOT
)"

concat() {
  str="${1?Need string}"
  times="${2?Need repetitions}"

  for((i=0; i < times; i++)); do
    printf '%s' "$str"
  done
}

for location in home ogd; do
  mapfile -t typescripts < <(find "$location" -type f -name '*.ts' -not -iwholename '*/global/*')
  mapfile -t globals < <(cd "$location/global" && find -- * -type f -name '*.ts')


  for ts in "${typescripts[@]}"; do
    printf '%s\n' "$ts"

    depth="${ts//[^\/]}"
    depth="${#depth}"

    root_relative="$(concat '../' "$depth")"
    global_relative="$(concat '../' "$((depth - 1))")"

    printf -v global_scripts "\"${global_relative}global/%s\", " "${globals[@]}"

    # shellcheck disable=SC2059
    printf "$template" \
           "$root_relative" \
           "$root_relative" \
           "$global_scripts" \
           "${ts##*/}" \
           "$global_relative" \
           > "${ts%.ts}.tsconfig.json"

    npx prettier --write "${ts%.ts}.tsconfig.json"
  done
done

mapfile -t tsconfigs < <(find . -mindepth 1 -type f -name '*.tsconfig.json' | sort)

paths=''
for tsconfig in "${tsconfigs[@]}"; do
  paths+="{ \"path\": \"$tsconfig\" },"
done

tmp="$(mktemp)"

jq --argjson references "[${paths%,}]" \
   '.references |= $references' \
   -- \
   tsconfig.json > "$tmp"

mv -- "$tmp" tsconfig.json
npx prettier --write tsconfig.json
